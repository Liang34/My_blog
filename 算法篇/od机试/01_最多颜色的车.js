// 【最多颜色的车辆】

// 题目描述

// 在一个狭小的路口，每秒只能通过一辆车，假好车辆的颜色只有 3 种，找出 N 秒内经过的最多颜色的车辆数量。

// 三种颜色编号为0 ，1 ，2

// 输入描述

// 第一行输入的是通过的车辆颜色信息

// [0,1,1,2] 代表4 秒钟通过的车辆颜色分别是 0 , 1 , 1 , 2

// 第二行输入的是统计时间窗，整型，单位为秒

// 输出描述

// 输出指定时间窗内经过的最多颜色的车辆数量。

// 示例1   输入输出示例仅供调试，后台判断数据一般不包含示例

// 输入

// 0 1 2 1
// 3

// 输出

// 2

// 样例解释

// 在 3 秒时间窗内，每个颜色最多出现 2 次。例如：[1,2,1]

// 示例1   输入输出示例仅供调试，后台判断数据一般不包含示例

// 输入

// 0 1 2 1

// 2

// 输出

// 1

// 样例解释

// 在 2 秒时间窗内，每个颜色最多出现1 次。

// 解题：滑动窗口的应用

// 0 1 2 1
// 3
const findCount = (arr, count) => {
    const map = {}
    let left = 0
    let res = 0
    for(let i = 0; i < arr.length; i++) {
        map[arr[i]] = map[arr[i]] ? map[arr[i]] + 1 : 1
        while(i - left + 1 === count) {
            res = Math.max(...Object.values(map), res)
            map[arr[left]]--
            left++
        }
    }
    return res
}
console.log(findCount([0,1,2,1], 2))
// 0 1 2 1

// 2